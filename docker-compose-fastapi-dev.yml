services:
  fastapi-dev:
    container_name: fastapi-dev
    build:
      context: ./services/fastapi
      dockerfile: Dockerfile.dev
    command: uvicorn main:app --host 0.0.0.0 --port ${FASTAPI_PORT} --reload

    # üåç Variables de entorno directas
    environment:
      - ENVIRONMENT=development
      - PORT=${FASTAPI_PORT}
      - API_DOMAIN=${API_DEV_DOMAIN}
      # JWT
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_DAYS=${ACCESS_TOKEN_EXPIRE_DAYS}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      # Usuario simulado
      - FASTAPI_DUMMY_USER=${FASTAPI_DUMMY_USERNAME}
      - FASTAPI_DUMMY_PASSWORD=${FASTAPI_DUMMY_PASSWORD}
      - FASTAPI_DUMMY_FULLNAME=${FASTAPI_DUMMY_FULLNAME}
      - FASTAPI_DUMMY_EMAIL=${FASTAPI_DUMMY_EMAIL}

    # üìÇ Montaje de vol√∫menes
    volumes:
      - ./services/fastapi:/app

    # üè∑Ô∏è Etiquetas para integraci√≥n con Traefik
    labels:
      # üåê Habilitar Traefik
      traefik.enable: "true"

      # üåê Router para FastAPI (HTTP)
      traefik.http.routers.fastapi-router.entrypoints: http
      traefik.http.routers.fastapi-router.rule: Host(`${API_DEV_DOMAIN}`)
      traefik.http.routers.fastapi-router.service: fastapi-service
      traefik.http.services.fastapi-service.loadbalancer.server.port: ${FASTAPI_PORT}

    # üîÑ Pol√≠tica de reinicio
    restart: unless-stopped

    # üåê Red asociada
    networks:
      - hic-cibus

# üåê Redes utilizadas
networks:
  hic-cibus:
    external: true